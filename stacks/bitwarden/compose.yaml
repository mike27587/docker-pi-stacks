---
name: bitwarden
services:

########################################################################################
# Bitwarden_rs - Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients
# https://github.com/dani-garcia/vaultwarden/wiki/Using-Docker-Compose
########################################################################################

  bitwarden:
    image: vaultwarden/server:latest
    container_name: bitwarden
    restart: always
    volumes:
      - ${VOLUME_DIR}/bitwarden:/data
    environment:
      - ADMIN_TOKEN=${BITWARDEN_ADMIN_TOKEN} # https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page
      - DOMAIN=https://bitwarden.${FQDN} # Required for correct generation of invite links
      - SIGNUPS_ALLOWED=false
      - SMTP_HOST=${SMTP_RELAY_SERVER} # https://github.com/dani-garcia/vaultwarden/wiki/SMTP-Configuration
      - SMTP_FROM=${EMAIL_FROM}
      - SMTP_PORT=587
      - SMTP_SECURITY=starttls
      - SMTP_USERNAME=${EMAIL_FROM} # Must 'enable 2FA and use app password' if using Gmail --> https://support.google.com/accounts/answer/185833?hl=en
      - SMTP_PASSWORD=${BITWARDEN_EMAIL_APP_PASSWORD}
      - LOG_FILE=/data/bitwarden.log
      - DATABASE_URL=mysql://vaultwarden:${BITWARDEN_MYSQL_PASSWORD}@bitwarden-db/vaultwarden #FORMAT: DATABASE_URL=mysql://[[user]:[password]@]host[:port][/database]
      - DISABLE_ICON_DOWNLOAD=true
    networks:
      - traefik
    #ports:
      # - 443:443
      # - 80:80
    depends_on:
      bitwarden-db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.bitwarden-rtr.entrypoints=websecure"
      - "traefik.http.routers.bitwarden-rtr.rule=Host(`bitwarden.$FQDN`)"
      - "traefik.http.routers.bitwarden-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.bitwarden-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.bitwarden-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      # - "traefik.http.routers.bitwarden-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.bitwarden-rtr.service=bitwarden-svc"
      - "traefik.http.services.bitwarden-svc.loadbalancer.server.port=80"

########################################################################################
# MariaDB
# Vaultwarden is based upon MariaDB client libraries since that is what Debian provides.
# https://hub.docker.com/_/mariadb
#
# Notes: https://github.com/dani-garcia/bitwarden_rs/wiki/Using-the-MySQL-Backend
########################################################################################

  bitwarden-db:
    image: container-registry.oracle.com/mysql/community-server:8.4-aarch64
    container_name: bitwarden-db
    restart: always
    networks:
      - traefik
    environment:
      MYSQL_USER: vaultwarden
      MYSQL_DATABASE: vaultwarden
      MYSQL_ROOT_PASSWORD: ${BITWARDEN_MYSQL_ROOTPW}
      MYSQL_PASSWORD: ${BITWARDEN_MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: bitwarden.traefik
    volumes:
      - ${VOLUME_DIR}/bitwarden/db:/var/lib/mysql #Data Directory
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
          
networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik
