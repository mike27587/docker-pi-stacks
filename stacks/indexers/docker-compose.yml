---
version: '3.7'
services:

########################################################################################
# Indexers
# https://hub.docker.com/r/linuxserver/ombi
# https://hub.docker.com/r/linuxserver/jackett
# https://hub.docker.com/r/linuxserver/radarr
# https://hub.docker.com/r/linuxserver/sonarr
# https://hub.docker.com/r/linuxserver/prowlarr
########################################################################################

  # ombi:
  #   image: ghcr.io/linuxserver/ombi
  #   container_name: ombi
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - BASE_URL=/
  #   volumes:
  #     - ${CONFIG_DIR}/ombi:/config
  #   # ports:
  #   #  - 3579:3579
  #   restart: always
  #   networks:
  #     - traefik
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.ombi-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.ombi-rtr.rule=Host(`ombi.$FQDN`)"
  #     - "traefik.http.routers.ombi-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.ombi-rtr.middlewares=chain-no-auth@file" # No Authentication
  #     # - "traefik.http.routers.ombi-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
  #     - "traefik.http.routers.ombi-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
  #     ## HTTP Services
  #     - "traefik.http.routers.ombi-rtr.service=ombi-svc"
  #     - "traefik.http.services.ombi-svc.loadbalancer.server.port=3579"

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PORT=5055 #optional
    # ports:
    #   - 5055:5055
    volumes:
      - ${CONFIG_DIR}/overseerr:/app/config
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.overseerr-rtr.entrypoints=websecure"
      - "traefik.http.routers.overseerr-rtr.rule=Host(`overseerr.$FQDN`)"
      - "traefik.http.routers.overseerr-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.overseerr-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.overseerr-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.overseerr-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.overseerr-rtr.service=overseerr-svc"
      - "traefik.http.services.overseerr-svc.loadbalancer.server.port=5055"

  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022 #optional
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${EXTHDD_DIR}/media/tv:/tv
      - ${EXTHDD_DIR}/downloads:/downloads
      - "/etc/localtime:/etc/localtime:ro"
    #ports:
      #- 8989:8989
    restart: always
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.sonarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$FQDN`)"
      - "traefik.http.routers.sonarr-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.sonarr-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.sonarr-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"

  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022 #optional
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${EXTHDD_DIR}/downloads:/downloads
      - ${EXTHDD_DIR}/media/movies:/movies
    #ports:
      #- 7878:7878
    restart: always
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.radarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.$FQDN`)"
      - "traefik.http.routers.radarr-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.radarr-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.radarr-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.radarr-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"

  lidarr:
    image: ghcr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022 #optional
    volumes:
      - ${CONFIG_DIR}/lidarr:/config
      - ${EXTHDD_DIR}/downloads:/downloads
      - ${EXTHDD_DIR}/media/music:/music
      #- "/etc/localtime:/etc/localtime:ro"
    #ports:
      #- 8686:8686
    restart: always
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.lidarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.lidarr-rtr.rule=Host(`lidarr.$FQDN`)"
      - "traefik.http.routers.lidarr-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.lidarr-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.lidarr-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.lidarr-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.lidarr-rtr.service=lidarr-svc"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"

  # jackett:
  #   image: ghcr.io/linuxserver/jackett
  #   container_name: jackett
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${CONFIG_DIR}/jackett:/config
  #     - ${VOLUME_DIR}/jackett:/downloads
  #     - "/etc/localtime:/etc/localtime:ro"
  #   #ports:
  #     #- 9117:9117
  #   restart: always
  #   networks:
  #     - traefik
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.jackett-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.jackett-rtr.rule=Host(`jackett.${FQDN}`)"
  #     - "traefik.http.routers.jackett-rtr.tls=true"
  #     ## Middlewares
  #     - "traefik.http.routers.jackett-rtr.middlewares=chain-no-auth@file" # No Authentication
  #     # - "traefik.http.routers.jackett-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
  #     #- "traefik.http.routers.jackett-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
  #     ## HTTP Services
  #     - "traefik.http.routers.jackett-rtr.service=jackett-svc"
  #     - "traefik.http.services.jackett-svc.loadbalancer.server.port=9117"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_DIR}/prowlarr:/config
    #ports:
      #- 9696:9696
    restart: always
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.prowlarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.${FQDN}`)"
      - "traefik.http.routers.prowlarr-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.prowlarr-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.prowlarr-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.prowlarr-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.prowlarr-rtr.service=prowlarr-svc"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"

networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik
