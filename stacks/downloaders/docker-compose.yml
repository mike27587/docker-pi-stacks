---
version: "3.7"
services:
  wireguard: # for rootless operation (Podman), need to first run `sudo modprobe ip_tables`
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - SERVERURL=wireguard.domain.com #optional
      # - SERVERPORT=51820 #optional
      # - PEERS=1 #do not set PEERS for client mode.
      # - PEERDNS=auto #optional
      # - INTERNAL_SUBNET=10.13.13.0 #optional
    volumes:
      - ${CONFIG_DIR}/wireguard:/config
      - /lib/modules:/lib/modules
      - ${EXTHDD_DIR}/downloads/torrents:/downloads # Added path here so it's accesible by Radarr/Sonarr
      - ${EXTHDD_DIR}/downloads/usenet:/downloads # Added path here so it's accesible by SABnzbd
    networks:
      - traefik
    # ports:
    #   - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: always

  transmission:
    image: ghcr.io/linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - TRANSMISSION_WEB_HOME=/combustion-release/ #optional (not supported in Transmission 4.x)
      # - USER=username #optional
      # - PASS=password #optional
    volumes:
      - ${CONFIG_DIR}/transmission:/config
      - ${EXTHDD_DIR}/downloads/torrents:/downloads
      - ${EXTHDD_DIR}/downloads/torrents/watch:/watch
    network_mode: service:wireguard
    # ports:
    #   - 9091:9091
    #   - 51413:51413
    #   - 51413:51413/udp
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.transmission-rtr.entrypoints=websecure"
      - "traefik.http.routers.transmission-rtr.rule=Host(`transmission.$FQDN`)"
      - "traefik.http.routers.transmission-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.transmission-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.transmission-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.transmission-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.transmission-rtr.service=transmission-svc"
      - "traefik.http.services.transmission-svc.loadbalancer.server.port=9091"

  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
      - WEBUI_PORT=8081
    volumes:
      - ${CONFIG_DIR}/qbittorrent:/config
      - ${EXTHDD_DIR}/downloads/torrents/downloads:/downloads
    # networks:
    #   - traefik
    network_mode: service:wireguard
    # ports:
    #   - 6881:6881
    #   - 6881:6881/udp
    #   - 8081:8081
    restart: always
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.qbittorrent-rtr.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent-rtr.rule=Host(`qbittorrent.$FQDN`)"
      - "traefik.http.routers.qbittorrent-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.qbittorrent-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.qbittorrent-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.qbittorrent-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.qbittorrent-rtr.service=qbittorrent-svc"
      - "traefik.http.services.qbittorrent-svc.loadbalancer.server.port=8081"

  # sabnzbd:
  #   image: lscr.io/linuxserver/sabnzbd:latest
  #   container_name: sabnzbd
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${CONFIG_DIR}/sabnzbd:/config
  #     - ${EXTHDD_DIR}/downloads/usenet/completed:/downloads #optional
  #     - ${EXTHDD_DIR}/downloads/usenet/incomplete:/incomplete-downloads #optional
  #   # ports:
  #   #   - 8080:8080 # Configured in sabnzbd.ini
  #   restart: unless-stopped
  #   network_mode: service:wireguard
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.sabnzbd-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.sabnzbd-rtr.rule=Host(`sabnzbd.$FQDN`)"
  #     - "traefik.http.routers.sabnzbd-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-no-auth@file" # No Authentication
  #     # - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
  #     - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
  #     ## HTTP Services
  #     - "traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc"
  #     - "traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080"

  # nzbget:
  #   image: lscr.io/linuxserver/nzbget:latest
  #   container_name: nzbget
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${CONFIG_DIR}/nzbget:/config
  #     - ${EXTHDD_DIR}/downloads/usenet:/downloads
  #   # ports:
  #     # - 6789:6789
  #   network_mode: service:wireguard
  #   restart: always
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.nzbget-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.nzbget-rtr.rule=Host(`nzbget.$FQDN`)"
  #     - "traefik.http.routers.nzbget-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.nzbget-rtr.middlewares=chain-no-auth@file" # No Authentication
  #     # - "traefik.http.routers.nzbget-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
  #     - "traefik.http.routers.nzbget-rtr.middlewares=chain-oauth2-proxy@file" # OAuth 2.0
  #     ## HTTP Services
  #     - "traefik.http.routers.nzbget-rtr.service=nzbget-svc"
  #     - "traefik.http.services.nzbget-svc.loadbalancer.server.port=6789"

networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik
